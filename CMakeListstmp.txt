cmake_minimum_required(VERSION 3.1)

project(Platformer VERSION 0.1)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED true)

# since we will link statically in both debug and release we need to compile with these flags
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")

# making sure that we are linking statically
add_compile_definitions(SFML_STATIC)

file (GLOB_RECURSE SOURCE
    PRIVATE "${PROJECT_SOURCE_DIR}/src/*.hpp"
    PRIVATE "${PROJECT_SOURCE_DIR}/src/*.cpp"
)

add_executable(${PROJECT_NAME}
    ${SOURCE}
)

# So that you have filter folders showing up in Visual studio
source_group("src"              FILES ${SOURCE})

# These will most likely be different for you depending on where you have these downloaded
target_include_directories(${PROJECT_NAME}
    PRIVATE "C:/libs/SFML/include"
    PRIVATE "C:/libs/glm"
)

target_link_directories(${PROJECT_NAME}
    PRIVATE "C:/libs/SFML/lib-static"
)

target_link_libraries(${PROJECT_NAME} 
    opengl32 winmm gdi32 freetype openal32 flac vorbisenc vorbisfile vorbis ogg ws2_32
    sfml-graphics-s-d sfml-main-d sfml-system-s-d sfml-window-s-d
)

# uncomment for release builds
# target_link_libraries(${PROJECT_NAME} sfml-audio-s sflm-graphics-s sfml-main sfml-system-s sfml-window-s)

